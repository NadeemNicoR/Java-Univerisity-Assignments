07-01: Graph Representation
*Please answer every theoretical question regarding this task here*
Graph A:
Edge List: int[] edgeList= {5,8, 1,2,1,3,1,4,1,5,2,4,2,5,3,4,4,5}
Node list: int[] neighborhood = {2,3,4,5  1,4,5,  1,4,  1,2,3,5,   1,2,4}
   	            int[] nodeNhd = {0,4,7,9,13,16}
adjacency matrix: int[5][5] edge=    
[0, 1, 1, 1, 1 
 1, 0, 0, 1, 1
 1, 0, 0, 1, 0
 1, 1, 1, 0, 1
 1, 1, 0, 1, 0]
 
adjacency list representation:
			
					[1]->[2][]->[3][]->[4][]->[5][]
					[2]->[1][]->[4][]->[5][]
					[3]->[1][]->[4][]
					[4]->[1][]->[2][]->[3][]->[5][]
					[5]->[1][]->[2][]->[4][]

  Graph B:                 
Edge List:  int[] edgeList= {6,10, 1,1,1,2,1,4,2,3,2,4,2,5,3,6,4,1,5,6,6,4}
Node list: int[] neighborhood = {1,2,4,  3,4,5,  6,  1,  6,  4}
   	     	    int[] nodeNhd = {0,3,6,7,8,9,10}

adjacency matrix: int[6][6] edge =	  
[1, 1, 0, 1, 0, 0
 0, 0, 1, 1, 1, 0
 0, 0, 0, 0, 0, 1
 1, 0, 0, 0, 0, 0
 0, 0, 0, 0, 0, 1
 0, 0, 0, 1, 0, 0]

adjacency list representation:
			
					[1]->[1][]->[2][]->[4][]
					[2]->[3][]->[4][]->[5][]
					[3]->[6][]
					[4]->[1][]
					[5]->[6][]
					[6]->[4][]





07-03: Breadth-First and Depth-First Search
*Please answer every theoretical question regarding this task here*

a. Depth-First Search:   8,1,2,3,6,4,5,7
b. Breadth-First Search: 8,1,2,3,5,6,7,4

